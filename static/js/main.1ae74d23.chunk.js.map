{"version":3,"sources":["Components/JS_Uploadspreadsheet.js","Components/GroupeAlimentaire/groupe_alimentaire_select.js","Components/Aliments/AlimentCard.js","Components/Aliments/SummariesAliment.js","Pages/Home/home.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["JsUploadSpreadsheet","stateMutator","spreadSheetCompoMutator","setLoadingMutator","setAlimentOptions","useEffect","selectFile","window","location","href","encodeURIComponent","file_path","a","fetch","responseType","response","blob","data","f","File","type","headers","get","reader","FileReader","onload","event","target","result","readedData","XLSX","readSheet2","readAsBinaryString","wsname","SheetNames","ws","Sheets","dataParse","sheet_to_json","header","sheet2Info","structureCompoSheet","groupe_aliments","map","item","index","hasOwnProperty","push","Object","keys","sort","console","log","jsonSpreadsheetCompo","forEach","value","aliments_data_nutrient_ref","alim_nom_fr","alim_grp_nom_fr","alim_ssgrp_nom_fr","les_nutrients","id","nutrient","toString","replace","nutrient_headers","parseFloat","getNutrientHeaders","row","slice","makeStyles","theme","root","margin","spacing","input","display","GroupeAlimentaireSelect","groupe_alimentaires","selectedAliments","setSelectedAliments","setSelectedGroupAlimentaires","selectedGroupAlimentaires","setCurrentlySelectedGroupAlimentaire","currentlySelectedGroupAlimentaire","length","resetAlimentCard","handleGroupAlimentaireSelect","e","selectedAlimentaire","numberOfOccurences","filter","groupe_alim","substring","indexOf","selectedAlimentaireValue","handleChosenGroupAlimentaire","chosenAlimentaire","handleAlimentaireDelete","updateSelectedAliments","deletedGroupAlimentaire","Menu","attached","Button","Group","Dropdown","text","icon","labeled","button","className","scrolling","upward","search","Header","content","options","key","Item","style","height","onClick","description","Label","circular","color","g_alim","Or","width","disabled","empty","includes","position","basic","Icon","name","AlimentCard","groupe_alimentaire","aliment_options","aliment_images","logoImg","classes","useStyles","useState","imageLoaded","setImageLoaded","imgsrc","setImgSrc","txtPortion","setTxtPortion","aliment","setAliment","modifySelectedAliment","setAlimentImage","myAliment","groupe_alimentaire_value","portion","group_alim","some","groupeAlimentaireChangeEffect","groupeAlimentaire","group_alim_images","setGroupeAlimentaireImageAsync","imgUrl","Card","CardMedia","title","ReactImageAppear","src","animation","animationDuration","media","Skeleton","variant","CardContent","flexShrink","Typography","gutterBottom","component","charAt","toUpperCase","replaceAll","String","Array","fill","join","TextField","required","InputLabelProps","shrink","min","label","onChange","Number","Autocomplete","freeSolo","handleAlimentChange","getOptionLabel","option","renderInput","params","card","marginTop","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","blue","table","SummariesAliment","nutrientCompo","nutrientSums","setNutrientSums","myTempArray","header_index","sum","reduce","prev","curItem","nutVal","findIndex","element","nutrient_name","nutrient_sum","PrettoSlider","withStyles","palette","primary","main","thumb","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","styleList","textColor","progressClassNames","nutrientConstraints","mid","high","myStyleIndex","progressBarColorIndex","nutrientPercent","toFixed","marginBottom","paddingTop","valueLabelFormat","x","aria-label","valueLabelDisplay","step","Chip","nutrientText","onDelete","deleteIcon","justifyContent","flexWrap","listStyle","padding","fontSize","chipColor","borderColor","Home","uploaded","setUploadState","spreadsheetCompo","setSpreadsheetCompo","loading","setLoading","LinearProgress","summary_root","zIndex","background","flex","food_card","flexGrow","myCardRow","flexDirection","myCardColumn","Main","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1ae74d23.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../App.css';\r\nimport '../Nutrition.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\n\r\nexport default function JsUploadSpreadsheet(\r\n                                      {stateMutator, \r\n                                      spreadSheetCompoMutator, \r\n                                      setLoadingMutator, \r\n                                      setAlimentOptions}){\r\n\r\n    useEffect(() => {\r\n      setLoadingMutator(true);\r\n      selectFile(window.location.href+'/' +encodeURIComponent(\"PHASE_2_Finale_revised.xlsx\"));\r\n\r\n    },[]);\r\n\r\n    const selectFile = async (file_path) => {\r\n        \r\n        const response = await fetch(file_path, {responseType: 'blob'});\r\n        const data = await response.blob();\r\n\r\n        let f = new File([data], \"PHASE_2_Finale_revised.xlsx\", {\r\n          type: response.headers.get('content-type')\r\n        });\r\n\r\n        var reader = new FileReader();\r\n        \r\n        reader.onload = async function (event) {\r\n            var data = event.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary'});\r\n            \r\n            await readSheet2(readedData);\r\n\r\n            await setLoadingMutator(false);\r\n            await stateMutator(true);\r\n        };\r\n\r\n        \r\n        await reader.readAsBinaryString(f);\r\n\r\n    };\r\n\r\n    const readSheet2 = (readedData) => {\r\n      const wsname = readedData.SheetNames[1];\r\n      const ws = readedData.Sheets[wsname];\r\n          \r\n      /* Convert array to json*/\r\n      const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n\r\n      const sheet2Info = structureCompoSheet(dataParse);\r\n      spreadSheetCompoMutator(sheet2Info);\r\n\r\n      let groupe_aliments = {};\r\n\r\n      dataParse.map((item, index) => {\r\n          if (index == 0) return;\r\n            if (groupe_aliments.hasOwnProperty(item[0])){\r\n              groupe_aliments[item[0]].push(item[2])\r\n            }else{\r\n              groupe_aliments[item[0]] = [];\r\n              groupe_aliments[item[0]].push(item[2])\r\n            }\r\n        });\r\n        Object.keys(groupe_aliments).map((item) => {\r\n            groupe_aliments[item].sort();\r\n        });\r\n        console.log(groupe_aliments)\r\n        setAlimentOptions(groupe_aliments);\r\n        \r\n    }\r\n\r\n    const structureCompoSheet = (jsonSpreadsheetCompo) => {\r\n\r\n      let sheet2Info = {};\r\n      sheet2Info.aliments_data_nutrient_ref = [];\r\n      sheet2Info.nutrient_headers = [];\r\n\r\n      jsonSpreadsheetCompo.forEach((value, index) => {\r\n          if (index === 0) {\r\n            sheet2Info.nutrient_headers = getNutrientHeaders(value);\r\n            return;\r\n          }\r\n\r\n          sheet2Info.aliments_data_nutrient_ref.push({\r\n            [value[2]] : {\r\n              alim_nom_fr: value[2],\r\n              alim_grp_nom_fr: value[0],\r\n              alim_ssgrp_nom_fr: value[1],\r\n              les_nutrients: [\r\n                {\r\n                  id: ++index,\r\n                  nutrient: \"Energie, Règlement UE N° 1169/2011 (kcal/100g)\",\r\n                  value: value[3].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[1],\r\n                  value: value[4].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[2],\r\n                  value: value[5].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[3],\r\n                  value: value[6].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[4],\r\n                  value: value[7].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[5],\r\n                  value: value[8].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[6],\r\n                  value: value[9].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[7],\r\n                  value: value[10].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[1] +\" \"+ sheet2Info.nutrient_headers[3],\r\n                  value: parseFloat(value[4].toString().replace(',', '.')) \r\n                        + parseFloat(value[6].toString().replace(',', '.'))\r\n                },\r\n              ]\r\n            }\r\n          })\r\n      });\r\n\r\n      return sheet2Info;\r\n\r\n    }\r\n\r\n    const getNutrientHeaders = (row) => {\r\n      row.push(\"Eau + Alcool (g/100g)\");\r\n      row[3] = \"Energie (kcal/100g)\";\r\n      return row.slice(3);\r\n    }\r\n\r\nreturn (\r\n    <></>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  })\r\n)","import React, {useEffect} from 'react';\r\nimport { Dropdown, Icon, Menu , Button, Label} from 'semantic-ui-react';\r\n\r\nexport default function GroupeAlimentaireSelect({\r\n                            groupe_alimentaires,\r\n                            selectedAliments, \r\n                            setSelectedAliments,\r\n                            setSelectedGroupAlimentaires,\r\n                            selectedGroupAlimentaires,\r\n                            setCurrentlySelectedGroupAlimentaire,\r\n                            currentlySelectedGroupAlimentaire  \r\n                        })\r\n{\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedGroupAlimentaires.length > 0) {\r\n            setCurrentlySelectedGroupAlimentaire(selectedGroupAlimentaires[0]);\r\n            return;\r\n        }\r\n\r\n        resetAlimentCard() //called when selectedGroupAlimentaires is empty\r\n\r\n    },[selectedGroupAlimentaires]);\r\n\r\n    const handleGroupAlimentaireSelect = (e, selectedAlimentaire) => {\r\n        if (typeof selectedAlimentaire.value === 'undefined') return;\r\n\r\n        let numberOfOccurences = selectedGroupAlimentaires.filter(groupe_alim => groupe_alim.substring(0, (groupe_alim.indexOf(\"_\") === -1) ? groupe_alim.length : groupe_alim.indexOf(\"_\")) === selectedAlimentaire.value).length;\r\n        //if this is more than zero, then it means there may be multiple groupe_alims\r\n        //continue from here\r\n\r\n        let selectedAlimentaireValue = (numberOfOccurences > 0) ? selectedAlimentaire.value+\"_\"+numberOfOccurences : selectedAlimentaire.value;\r\n        setSelectedGroupAlimentaires([...selectedGroupAlimentaires, selectedAlimentaireValue]);\r\n        \r\n    }\r\n\r\n    const handleChosenGroupAlimentaire = (e, chosenAlimentaire) => {\r\n        setCurrentlySelectedGroupAlimentaire(chosenAlimentaire.value);\r\n    }\r\n\r\n    const handleAlimentaireDelete = async () => {\r\n        \r\n        await setSelectedGroupAlimentaires(selectedGroupAlimentaires.filter(item => item !== currentlySelectedGroupAlimentaire));\r\n        await updateSelectedAliments(currentlySelectedGroupAlimentaire);\r\n        \r\n    }\r\n\r\n    const updateSelectedAliments = async (deletedGroupAlimentaire) => {\r\n        delete selectedAliments[deletedGroupAlimentaire];\r\n        await setSelectedAliments(selectedAliments);\r\n    }\r\n\r\n    const resetAlimentCard = () => {\r\n        setCurrentlySelectedGroupAlimentaire(\"Aucun Groupe Alimentaire Sélectionné\");\r\n    }\r\n\r\n    return (\r\n        <Menu attached='top' >\r\n            <Button.Group >\r\n                \r\n                <Dropdown\r\n                    text='Ajouter'\r\n                    icon='plus'\r\n                    labeled\r\n                    button\r\n                    className='icon'\r\n                    scrolling={true}\r\n                    upward\r\n                    search\r\n                    header={<Dropdown.Header icon='tags' content='Ajouter Groupe Alimentaire' />}\r\n                    options={\r\n                        Object.keys(groupe_alimentaires).map(\r\n                            (item, index) => (\r\n                                {\r\n                                    key: index,\r\n                                    value: item,\r\n                                    text:item,\r\n                                    content: (\r\n                                        <Dropdown.Item\r\n                                          style={{height: 20}}\r\n                                          onClick={handleGroupAlimentaireSelect}\r\n                                          value={item}\r\n                                          icon='food'\r\n                                          content={item}\r\n                                          description={<Label circular color={\"grey\"} >\r\n                                          {selectedGroupAlimentaires.filter( g_alim => g_alim.substring(0, (g_alim.indexOf(\"_\") === -1) ? g_alim.length : g_alim.indexOf(\"_\")) === item ).length}\r\n                                        </Label>}\r\n                                        />\r\n                                      )\r\n                                }\r\n                            )\r\n                        )\r\n                    }\r\n                />\r\n                 \r\n                <Button.Or text={\"and\"} />\r\n                <Dropdown\r\n                    text='Choisir'\r\n                    icon='triangle down'\r\n                    labeled\r\n                    button\r\n                    className='icon'\r\n                    style={{width:190}}\r\n                    upward\r\n                    scrolling={true}\r\n                    disabled={selectedGroupAlimentaires.length === 0}\r\n                >\r\n                    <Dropdown.Menu >\r\n\r\n                        <Dropdown.Header icon='tags' content='Choisir Groupe Alimentaire' />\r\n                        {\r\n                            selectedGroupAlimentaires.map(\r\n                                (item, index) => <Dropdown.Item \r\n                                            key={index}\r\n                                            value={item}\r\n                                            content={item}\r\n                                            onClick={handleChosenGroupAlimentaire}\r\n                                            description={\r\n                                                <Label circular empty color={Object.keys(selectedAliments).includes(item)?\"green\":\"grey\"}  />\r\n                                                }\r\n                                            \r\n                                            />\r\n                            )\r\n                        }\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                \r\n            </Button.Group>\r\n\r\n            \r\n            <Menu.Menu position='right'>\r\n                <Button disabled={currentlySelectedGroupAlimentaire===\"Aucun Groupe Alimentaire Sélectionné\"} onClick={handleAlimentaireDelete} icon basic color='red'>\r\n                    <Icon name='trash' />\r\n                </Button>\r\n            </Menu.Menu>\r\n        </Menu>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport {\r\n    Card, \r\n    CardMedia, \r\n    CardContent, \r\n    Typography,\r\n    TextField,\r\n  } from '@material-ui/core/';\r\n  import Autocomplete from '@material-ui/lab/Autocomplete';\r\n  import Skeleton from '@material-ui/lab/Skeleton';\r\n  import ReactImageAppear from 'react-image-appear';\r\n  import group_alim_images from \"../../resources/alimentaire_images.json\"\r\n  import GroupeAlimentaireSelect from \"../../Components/GroupeAlimentaire/groupe_alimentaire_select\";\r\n  \r\n\r\nexport default function AlimentCard(\r\n  {\r\n    groupe_alimentaire,\r\n    aliment_options,\r\n    setSelectedAliments,\r\n    selectedAliments,\r\n    aliment_images,\r\n    setCurrentlySelectedGroupAlimentaire\r\n  }) {\r\n\r\n    const logoImg = \"https://lh3.googleusercontent.com/d/1k-WtjRYpUXyRqjaTZfJlQUz3gTwEBUAx=s220?authuser=0\";\r\n    const classes = useStyles();\r\n    const [imageLoaded, setImageLoaded] = useState(true);\r\n    const [imgsrc, setImgSrc] = useState(logoImg);\r\n    const [txtPortion, setTxtPortion] = useState(0);\r\n    const [aliment, setAliment] = useState(\"\");\r\n    const [selectedGroupAlimentaires, setSelectedGroupAlimentaires] = useState([]);\r\n    \r\n\r\n    const handleAlimentChange = (value) => {\r\n        \r\n        modifySelectedAliment(value);\r\n        \r\n        setImageLoaded(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n      \r\n      if (aliment !== \"\"){\r\n        modifySelectedAliment(aliment)\r\n        \r\n        if (imgsrc === aliment_images[aliment]) return;\r\n        \r\n        setAlimentImage(aliment);\r\n        \r\n      } \r\n    }, [aliment, txtPortion]);\r\n\r\n    const modifySelectedAliment = async (myAliment) => {\r\n      let groupe_alimentaire_value = groupe_alimentaire.substring(0, (groupe_alimentaire.indexOf(\"_\") === -1) ? groupe_alimentaire.length : groupe_alimentaire.indexOf(\"_\"));\r\n      setAliment(myAliment);\r\n      setSelectedAliments({...selectedAliments, [groupe_alimentaire]: {aliment: myAliment, portion: txtPortion, group_alim: groupe_alimentaire_value}});\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n      \r\n      //check if this groupe_alimentaire is new or already existing to show\r\n      if (Object.keys(selectedAliments).some(item => item === groupe_alimentaire)) {\r\n        \r\n        setImageLoaded(false);\r\n        setAliment(selectedAliments[groupe_alimentaire].aliment);\r\n        setTxtPortion(selectedAliments[groupe_alimentaire].portion);\r\n        \r\n        return;\r\n      }\r\n\r\n      if (selectedGroupAlimentaires.length > 0)\r\n        groupeAlimentaireChangeEffect(groupe_alimentaire);\r\n      else\r\n        resetAlimentCard();\r\n\r\n    }, [groupe_alimentaire]);\r\n\r\n    const groupeAlimentaireChangeEffect = async (groupeAlimentaire) => {\r\n      let groupe_alimentaire_value = groupeAlimentaire.substring(0, (groupeAlimentaire.indexOf(\"_\") === -1) ? groupeAlimentaire.length : groupeAlimentaire.indexOf(\"_\"))\r\n      \r\n      if (typeof group_alim_images[groupe_alimentaire_value] != \"undefined\"){\r\n        setAliment(\"\");\r\n        setTxtPortion(0);\r\n        setGroupeAlimentaireImageAsync(group_alim_images[groupe_alimentaire_value])\r\n        return;\r\n      }\r\n    }\r\n\r\n    const setGroupeAlimentaireImageAsync = async (imgUrl) => {\r\n      await setImageLoaded(false);\r\n      await setImgSrc(imgUrl);\r\n      await setImageLoaded(true);\r\n    }\r\n\r\n    const setAlimentImage = (myAliment) => {\r\n      \r\n      if (myAliment != \"\"){\r\n        setImgSrc(aliment_images[myAliment]);\r\n        setImageLoaded(true);\r\n      }\r\n    }\r\n\r\n    const resetAlimentCard = async () => {\r\n        await setAliment(\"\");\r\n        await setTxtPortion(0);\r\n        await setImageLoaded(false);\r\n        await setImgSrc(logoImg);\r\n        await setImageLoaded(true);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card >\r\n            \r\n            {imageLoaded ? (\r\n            <CardMedia\r\n              title={aliment}\r\n            >\r\n              <ReactImageAppear \r\n                  src={imgsrc}\r\n                  animation=\"zoomIn\"\r\n                  animationDuration=\"0.5s\"\r\n                  className={classes.media}\r\n              />\r\n              \r\n            </CardMedia>) \r\n            : \r\n            <Skeleton variant=\"rect\" width={\"100%\"}  />\r\n             \r\n            }\r\n            \r\n            {aliment_options &&\r\n            <GroupeAlimentaireSelect \r\n                groupe_alimentaires={aliment_options} \r\n                selectedAliments={selectedAliments}\r\n                setSelectedAliments={setSelectedAliments}\r\n                setSelectedGroupAlimentaires={setSelectedGroupAlimentaires}\r\n                selectedGroupAlimentaires={selectedGroupAlimentaires}\r\n                setCurrentlySelectedGroupAlimentaire={setCurrentlySelectedGroupAlimentaire}\r\n                currentlySelectedGroupAlimentaire={groupe_alimentaire}\r\n            />}\r\n            \r\n            <CardContent>\r\n                <div style={{flexShrink: 1}}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" color={\"primary\"} >\r\n                  {groupe_alimentaire &&\r\n                  groupe_alimentaire.charAt(0).toUpperCase() \r\n                  + groupe_alimentaire.replaceAll(\"_\",\" \").slice(1) \r\n                  + new String(Array(45 - groupe_alimentaire.length).fill(\"\\xa0\").join(\" \")).toString()  \r\n                  }\r\n                </Typography>\r\n                </div>\r\n\r\n                <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\r\n                {\r\n                ((aliment !== \"\") && (aliment != null)) ? aliment:\"Aucun Aliment sélectionné\"\r\n                //+ new String(Array(Math.max(0, (60 - aliment.length))).fill(\"\\xa0\").join(\" \")).toString() \r\n                }\r\n                </Typography>\r\n            </CardContent>\r\n            <CardContent>\r\n                <TextField\r\n                  required\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  type=\"number\"\r\n                  min={0}\r\n                  id={aliment}\r\n                  label=\"PORTION\"\r\n                  variant=\"filled\"\r\n                  value={txtPortion}\r\n                  onChange={(e) => {\r\n                    if (e.target.value !== \"\"){\r\n                      setTxtPortion(Number.parseFloat(e.target.value));\r\n                      if (Number.parseFloat(e.target.value) < 0){\r\n                        setTxtPortion(0);\r\n                      }  \r\n                    }else{\r\n                      setTxtPortion(e.target.value);\r\n                    }\r\n                  }}\r\n                  disabled={aliment === \"\"}\r\n                />\r\n              \r\n              \r\n                <Autocomplete\r\n                  disabled={groupe_alimentaire === \"Aucun Groupe Alimentaire Sélectionné\"}\r\n                  freeSolo\r\n                  onChange={ (event, value) => handleAlimentChange(value) }\r\n                  options={aliment_options[groupe_alimentaire.substring(0, (groupe_alimentaire.indexOf(\"_\") === -1) ? groupe_alimentaire.length : groupe_alimentaire.indexOf(\"_\")) ] || []}\r\n                  getOptionLabel={(option) => option}\r\n                  renderInput={(params) => <TextField {...params} label=\"Choisir un Aliment\" margin=\"normal\" />}\r\n                  value={aliment}\r\n                />\r\n                </CardContent>\r\n              \r\n        </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    card: {\r\n      //width: window.innerWidth - 30,\r\n      //margin: 1,\r\n      marginTop: 10,\r\n      // marginBottom: 50,\r\n      //background: \"linear-gradient(45deg, #56CCF2, #2F80ED)\"\r\n    },\r\n    media: {\r\n      display: 'block',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n      width: '100%',\r\n      height: '250px',\r\n      objectFit: 'cover',\r\n      //paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: blue[500],\r\n    },\r\n    table: {\r\n      width : 250\r\n    }\r\n  }));","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Chip, Icon, Typography, Slider, withStyles } from '@material-ui/core';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\n\r\n\r\n\r\n\r\nexport default function SummariesAliment({selectedAliments, nutrientCompo}){\r\n\r\n    const [nutrientSums, setNutrientSums] = useState([]);\r\n    let myTempArray = [];\r\n\r\n    useEffect(() => {\r\n        myTempArray = [];\r\n        console.log(selectedAliments);\r\n        nutrientCompo.nutrient_headers.map((item, header_index) => {\r\n\r\n            const sum = Object.keys(selectedAliments).reduce((prev, curItem, index) => {\r\n                \r\n                if (selectedAliments[curItem].aliment === null) return prev + 0;\r\n\r\n                const nutVal = nutrientCompo.aliments_data_nutrient_ref\r\n                                [\r\n                        nutrientCompo.aliments_data_nutrient_ref.findIndex((element) => selectedAliments[curItem].aliment === Object.keys(element)[0])\r\n                                 ][selectedAliments[curItem].aliment].les_nutrients[header_index].value\r\n\r\n                return prev + (selectedAliments[curItem].portion * nutVal);\r\n            }, 0);\r\n\r\n            myTempArray.push({\r\n                nutrient_name: item, nutrient_sum: sum\r\n            })\r\n        })\r\n\r\n        setNutrientSums(myTempArray);\r\n\r\n    }, [selectedAliments]);\r\n\r\n    const PrettoSlider = withStyles(theme => ({\r\n        root: {\r\n          height: 8,\r\n        },\r\n        disabled: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: '#fff',\r\n          border: '2px solid currentColor',\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: 'calc(-50% + 4px)',\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      }))(Slider);\r\n    const classes = useStyles();\r\n    const EAU = \"Eau (g/100g)\";\r\n    const ALCOOL = \"Alcool (g/100g)\";\r\n    const GLUCIDES = \"Glucides (g/100g)\";\r\n\r\n    const styleList = [\r\n        {\r\n            icon: \"done\",\r\n            backgroundColor: \"#70AB1A\",\r\n            textColor: 'white'\r\n        }, {    \r\n            icon: \"error_outline\",\r\n            backgroundColor:\"#D8AD26\", \r\n            textColor: 'white'\r\n        },\r\n        {\r\n            icon:\"close\",\r\n            backgroundColor: \"#D14600\",\r\n            textColor: 'white'\r\n        },\r\n        {\r\n            icon: \"\",\r\n            backgroundColor: \"#ffffff\",\r\n            textColor: 'black'\r\n        }];\r\n\r\n    const progressClassNames = [{\r\n        color: '#72DC00',\r\n    },{\r\n        color: \"#D29D23\"\r\n    },{\r\n        color: \"#A93226\"\r\n    }]\r\n\r\n    const nutrientConstraints = [\r\n        {\r\n            mid: 2250,\r\n            high: 3000\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 0\r\n        },\r\n        {\r\n            mid: 69,\r\n            high: 92\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 0\r\n        },\r\n        {\r\n            mid: 600,\r\n            high: 800\r\n        },\r\n        {\r\n            mid: 1875,\r\n            high: 2500\r\n        },\r\n        {\r\n            mid: 1500,\r\n            high: 2000\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 0\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 1200\r\n        }\r\n\r\n    ]\r\n    \r\n    return ( \r\n        <div className={classes.root}>\r\n            { nutrientSums.map((item, index) => {\r\n                let myStyleIndex = 0, progressBarColorIndex = 0;\r\n                myStyleIndex = (item.nutrient_sum >= nutrientConstraints[index].high) ? 2 : \r\n                             (item.nutrient_sum > nutrientConstraints[index].mid) ? 1 : 0;\r\n\r\n                let nutrientPercent = ((item.nutrient_sum/nutrientConstraints[index].high) * 100).toFixed(0);\r\n                progressBarColorIndex = (nutrientPercent >= 75) ? 2 :\r\n                                 (nutrientPercent >= 50) ? 1 : 0;\r\n                \r\n                \r\n                return ( \r\n                <div key={index} style={{marginBottom: 20, width:\"95%\", paddingTop: 10}}>\r\n                    {(EAU != item.nutrient_name) && (ALCOOL != item.nutrient_name) && (GLUCIDES != item.nutrient_name)  ?\r\n                (\r\n                <div>\r\n                    <PrettoSlider \r\n                        valueLabelFormat={x => x+\"%\"}\r\n                        aria-label=\"pretto slider\" \r\n                        value={((item.nutrient_sum/nutrientConstraints[index].high) * 100).toFixed(0)} \r\n                        valueLabelDisplay=\"on\"\r\n                        step={1}\r\n                        style={{color:progressClassNames[progressBarColorIndex].color}}\r\n                        />\r\n                    <Typography gutterBottom>{item.nutrient_name}: <b>{item.nutrient_sum.toFixed(2)} </b></Typography>\r\n                </div>\r\n                ) :\r\n                (\r\n                    (item === \"Eau + Alcool (g/100g)\") &&\r\n                    <Chip \r\n                        key={index}\r\n                        style={{margin: \"0.5%\", backgroundColor: styleList[myStyleIndex].backgroundColor, color: styleList[myStyleIndex].textColor}}\r\n                        icon={<RestaurantIcon style={{color:styleList[myStyleIndex].textColor}} />} \r\n                        variant=\"outlined\"\r\n                        label={<Typography className={classes.nutrientText}>\r\n                            {item.nutrient_name}: <b>{item.nutrient_sum.toFixed(2)} </b></Typography>}\r\n                        onDelete={(e) => {}}\r\n                        deleteIcon={<Icon >{styleList[myStyleIndex].icon}</Icon>}\r\n                    />\r\n                    )}\r\n            </div>)\r\n             })\r\n             }\r\n        </div>\r\n    );\r\n} \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 5,\r\n    },\r\n    \r\n    title: {\r\n      fontSize: 24,\r\n      justifyContent: 'center'\r\n    },\r\n    nutrientText: {\r\n        fontSize: 12,\r\n    },\r\n    chipColor: {\r\n        borderColor: 'green'\r\n    }\r\n    \r\n  })\r\n  );\r\n\r\n/*  nutrientCompo.nutrient_headers.map((item, index) => {\r\n    let myStyleIndex = 0, progressBarColorIndex = 0;\r\n    if (!item) return;\r\n     const nutrientSum = Object.keys(aliment_portion).reduce((previousValue, currentValue) =>{\r\n         const nutrientValue = nutrientCompo.aliments_data_nutrient_ref\r\n             [\r\n                 nutrientCompo.aliments_data_nutrient_ref.findIndex\r\n                 (\r\n                 (element) => currentValue === Object.keys(element)[0]\r\n                 )\r\n             ][currentValue].les_nutrients[index].value\r\n         let prdt = aliment_portion[currentValue] * Number.parseFloat(nutrientValue);\r\n         \r\n         return previousValue + prdt;\r\n     }, 0);\r\n\r\n     myStyleIndex = (nutrientSum >= nutrientConstraints[index].high) ? 2 : \r\n                             (nutrientSum > nutrientConstraints[index].mid) ? 1 : 0;\r\n\r\n     if (nutrientConstraints[index].high === 0) myStyleIndex = 3;\r\n\r\n     let nutrientPercent = ((nutrientSum/nutrientConstraints[index].high) * 100).toFixed(0);\r\n     \r\n     progressBarColorIndex = (nutrientPercent >= 75) ? 2 :\r\n                                 (nutrientPercent >= 50) ? 1 : 0;\r\n\r\n     \r\n     return (\r\n         <div key={index} style={{marginBottom: 20, width:\"95%\", paddingTop: 10}}>\r\n         {(EAU != item) && (ALCOOL != item) && (GLUCIDES != item)  ?\r\n     (\r\n     <div>\r\n         <PrettoSlider \r\n             valueLabelFormat={x => x+\"%\"}\r\n             aria-label=\"pretto slider\" \r\n             value={nutrientPercent} \r\n             valueLabelDisplay=\"on\"\r\n             step={1}\r\n             style={{color:progressClassNames[progressBarColorIndex].color}}\r\n             />\r\n         <Typography gutterBottom>{item}: <b>{nutrientSum.toFixed(2)} </b></Typography>\r\n     </div>\r\n     ) :\r\n     (\r\n         (item === \"Eau + Alcool (g/100g)\") &&\r\n         <Chip \r\n             key={index}\r\n             style={{margin: \"0.5%\", backgroundColor: styleList[myStyleIndex].backgroundColor, color: styleList[myStyleIndex].textColor}}\r\n             icon={<RestaurantIcon style={{color:styleList[myStyleIndex].textColor}} />} \r\n             variant=\"outlined\"\r\n             label={<Typography className={classes.nutrientText}>\r\n                 {item}: <b>{nutrientSum.toFixed(2)} </b></Typography>}\r\n             onDelete={(e) => {}}\r\n             deleteIcon={<Icon >{styleList[myStyleIndex].icon}</Icon>}\r\n         />\r\n         )}\r\n </div>)\r\n})\r\n*/","import React, {useEffect, useState} from 'react';\r\nimport '../../App.css';\r\nimport '../../Nutrition.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport JsUploadSpreadsheet from '../../Components/JS_Uploadspreadsheet';\r\n  import { \r\n    Card,CardContent,Typography, LinearProgress\r\n  } from '@material-ui/core/';\r\nimport AlimentCard from '../../Components/Aliments/AlimentCard';\r\nimport SummariesAliment from '../../Components/Aliments/SummariesAliment';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nimport aliment_images from '../../resources/aliment_images.json';\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\nconst [uploaded, setUploadState] = useState(false);\r\nconst [selectedAliments, setSelectedAliments] = useState({});\r\nconst [spreadsheetCompo, setSpreadsheetCompo] = useState({});\r\nconst [loading, setLoading] = useState(false);\r\nconst [aliment_options, setAlimentOptions] = useState([]);\r\n\r\nconst [currentlySelectedGroupAlimentaire, setCurrentlySelectedGroupAlimentaire] = useState(\"Aucun Groupe Alimentaire Sélectionné\");\r\n\r\nconst classes = useStyles();\r\n\r\n  useEffect(() => {      \r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div >\r\n        {\r\n        !uploaded &&\r\n        \r\n        <>\r\n          <JsUploadSpreadsheet \r\n              stateMutator={setUploadState} \r\n              spreadSheetCompoMutator={setSpreadsheetCompo} \r\n              setLoadingMutator={setLoading}\r\n              setAlimentOptions={setAlimentOptions}\r\n          />\r\n        </>\r\n\r\n        }\r\n        \r\n        {\r\n          loading && \r\n          <LinearProgress style={{marginTop: 10}}/>\r\n        }\r\n\r\n        {\r\n          uploaded &&\r\n            <div className={classes.root}>\r\n              \r\n              <AlimentCard \r\n                  groupe_alimentaire={currentlySelectedGroupAlimentaire} \r\n                  aliment_options={aliment_options} \r\n                  setSelectedAliments={setSelectedAliments}\r\n                  selectedAliments={selectedAliments}\r\n                  aliment_images={aliment_images}\r\n                  setCurrentlySelectedGroupAlimentaire={setCurrentlySelectedGroupAlimentaire}\r\n              />\r\n              \r\n              \r\n\r\n              <Card className={classes.summary_root} style={{zIndex:-1}}>\r\n                <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" color={\"primary\"} >\r\n                  Apports nutritionnels du jour\r\n                  </Typography>\r\n\r\n                  <SummariesAliment \r\n                      selectedAliments={selectedAliments}\r\n                      nutrientCompo={spreadsheetCompo}\r\n                  />\r\n\r\n                </CardContent>        \r\n              </Card>\r\n\r\n              \r\n            {/* <Box component=\"span\" m={1}>\r\n              \r\n            </Box> */}\r\n          </div>\r\n        }\r\n    \r\n    </div>\r\n  );\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      background: 'linear-gradient(45deg, rgba(255,255,255,0.9) 30%, #rgba(225,225,2,0.4) 90%)',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgba(10, 10, 0, .1)',\r\n      color: 'white',\r\n      flex: 1\r\n    },\r\n    food_card:{\r\n      flexGrow: 1\r\n    },\r\n    summary_root: {\r\n      width: \"100%\",\r\n      flex: 1\r\n    },\r\n    myCardRow:{\r\n      flexDirection: 'row'\r\n    },\r\n    myCardColumn: {\r\n      flexDirection: 'column'\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n      justifyContent: 'center'\r\n    },\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport Home from './Pages/Home/home';\r\n\r\nfunction Main() {\r\n  return (\r\n    <Home />\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './App.css';\r\nimport Main from './Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}