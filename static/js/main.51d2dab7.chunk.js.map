{"version":3,"sources":["Components/Header/appName.js","Components/Header/headerBox.js","Components/JS_Uploadspreadsheet.js","Components/Aliments/AlimentCard.js","Components/Aliments/SummariesAliment.js","Pages/Home/home.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["AppName","file_name","classes","useStyles","AppBar","position","Toolbar","Typography","variant","className","title","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","textAlign","HeaderBox","Box","component","boxParentSize","Paper","background","border","borderRadius","boxShadow","color","height","width","padding","JsUploadSpreadsheet","stateMutator","spreadSheetMutator","spreadSheetCompoMutator","setAlimentPortionMutator","setLoadingMutator","setFileName","setAlimentOptions","useEffect","selectFile","window","location","href","encodeURIComponent","file_path","a","fetch","responseType","response","blob","data","f","File","type","headers","get","reader","FileReader","onload","event","target","result","readedData","XLSX","readSheet1","readSheet2","name","console","log","readAsBinaryString","wsname","SheetNames","ws","Sheets","dataParse","sheet_to_json","header","sheet1Info","count","aliments","forEach","value","length","push","aliment","sous_groupe_alimentaire","groupe_alimentaire","portion","myAlimentObj","item","sheet2Info","structureCompoSheet","groupe_aliments","map","index","hasOwnProperty","jsonSpreadsheetCompo","aliments_data_nutrient_ref","alim_nom_fr","alim_grp_nom_fr","alim_ssgrp_nom_fr","les_nutrients","id","nutrient","nutrient_headers","toString","replace","parseFloat","getNutrientHeaders","row","slice","gutterBottom","margin","input","display","AlimentCard","sous_groupe","spreadsheetData","setSpreadsheetData","nutrientCompo","setAlimentPortion","aliment_portion","aliment_options","useState","imageLoaded","setImageLoaded","imgsrc","setImgSrc","txtPortion","setTxtPortion","aliment_compo_group_alimentaire","set_aliment_compo_groupe_alimentaire","groupe_alim","findIndex","element","Object","keys","axios","method","url","then","imgSearch","contents","skip","indexOf","startPos","endPos","finalString","substring","catch","e","warn","Card","card","CardHeader","avatar","Avatar","aria-label","subheader","CardMedia","media","image","CircularProgress","CardContent","CardActions","disableSpacing","paragraph","TextField","required","InputLabelProps","shrink","min","label","onChange","Number","Autocomplete","sous_groupe_alim","splice","handleAlimentChange","options","getOptionLabel","option","renderInput","params","TableContainer","style","Table","table","TableHead","TableRow","TableCell","align","TableBody","key","scope","toFixed","innerWidth","marginTop","marginBottom","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","backgroundColor","blue","SummariesAliment","PrettoSlider","withStyles","disabled","palette","primary","main","thumb","active","valueLabel","left","track","rail","Slider","styleList","icon","textColor","progressClassNames","nutrientConstraints","mid","high","progressBarColorIndex","myStyleIndex","nutrientSum","reduce","previousValue","currentValue","nutrientValue","nutrientPercent","valueLabelFormat","x","valueLabelDisplay","step","Chip","nutrientText","onDelete","deleteIcon","Icon","justifyContent","flexWrap","listStyle","fontSize","chipColor","borderColor","Home","uploaded","setUploadState","spreadsheetCompo","setSpreadsheetCompo","loading","setLoading","Container","LinearProgress","elevation","summary_root","itemsToShow","m","food_card","flex","myCardRow","flexDirection","myCardColumn","Main","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.51d2dab7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nexport default function AppName({file_name}) {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {file_name}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n        );\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      textAlign: 'left'\r\n    },\r\n  }));","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppName from './appName';\r\n\r\nexport default function HeaderBox({file_name}) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box component=\"span\" className={classes.boxParentSize} >\r\n            <Paper className={classes.root}>\r\n                <h1>Nutrition Application</h1>\r\n            </Paper>\r\n            <AppName file_name={file_name}/>\r\n        </Box>\r\n        );\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      color: 'white',\r\n      height: 100,\r\n      \r\n    },\r\n    boxParentSize:{\r\n        height: 100,\r\n        width: \"80%\",\r\n        padding: '0 30px',\r\n    }\r\n  });","import React, { useEffect } from 'react';\r\nimport '../App.css';\r\nimport '../Nutrition.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {Typography} from '@material-ui/core/';\r\nimport * as XLSX from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nexport default function JsUploadSpreadsheet(\r\n                                      {stateMutator, \r\n                                      spreadSheetMutator, \r\n                                      spreadSheetCompoMutator, \r\n                                      setAlimentPortionMutator, \r\n                                      setLoadingMutator, \r\n                                      setFileName,\r\n                                      setAlimentOptions}){\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n      setLoadingMutator(true);\r\n      selectFile(window.location.href+'/' +encodeURIComponent(\"meal_calculator.xlsx\"));\r\n\r\n    },[]);\r\n\r\n    const selectFile = async (file_path) => {\r\n        \r\n        const response = await fetch(file_path, {responseType: 'blob'});\r\n        const data = await response.blob();\r\n\r\n        let f = new File([data], \"source_file.xlsx\", {\r\n          type: response.headers.get('content-type')\r\n        });\r\n\r\n        var reader = new FileReader();\r\n        \r\n        reader.onload = async function (event) {\r\n            var data = event.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary'});\r\n            await readSheet1(readedData);\r\n            await readSheet2(readedData);\r\n\r\n            await setLoadingMutator(false);\r\n            await stateMutator(true);\r\n        };\r\n\r\n        setFileName(f.name);\r\n        console.log(f);\r\n        await reader.readAsBinaryString(f);\r\n\r\n    };\r\n\r\n    const readSheet1 = (readedData) => {\r\n        const wsname = readedData.SheetNames[0];\r\n        const ws = readedData.Sheets[wsname];\r\n            \r\n        /* Convert array to json*/\r\n        const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n        let sheet1Info = {}, count = 0;\r\n        sheet1Info.aliments = [];\r\n\r\n        dataParse.forEach(value => {\r\n          count++;\r\n          if (count === 1) return;\r\n          if (value[0] == null) return;\r\n          if (value.length === 0) return;\r\n\r\n          sheet1Info.aliments.push({\r\n              aliment: value[2],\r\n              sous_groupe_alimentaire: value[1],\r\n              groupe_alimentaire: value[0],\r\n              portion: value[3]\r\n            });\r\n        });\r\n\r\n        spreadSheetMutator(sheet1Info);\r\n        let myAlimentObj = {};\r\n        sheet1Info.aliments.forEach((item) => {\r\n            myAlimentObj[item.aliment] = item.portion;\r\n        });\r\n        setAlimentPortionMutator(\r\n          myAlimentObj\r\n        );\r\n\r\n    }\r\n\r\n    const readSheet2 = (readedData) => {\r\n      const wsname = readedData.SheetNames[1];\r\n      const ws = readedData.Sheets[wsname];\r\n          \r\n      /* Convert array to json*/\r\n      const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n\r\n      const sheet2Info = structureCompoSheet(dataParse);\r\n      spreadSheetCompoMutator(sheet2Info);\r\n\r\n      let groupe_aliments = {};\r\n\r\n      dataParse.map((item, index) => {\r\n          if (index == 0) return;\r\n            if (groupe_aliments.hasOwnProperty(item[0])){\r\n              groupe_aliments[item[0]].push(item[2])\r\n            }else{\r\n              groupe_aliments[item[0]] = [];\r\n              groupe_aliments[item[0]].push(item[2])\r\n            }\r\n        });\r\n\r\n        setAlimentOptions(groupe_aliments);\r\n        \r\n    }\r\n\r\n    const structureCompoSheet = (jsonSpreadsheetCompo) => {\r\n\r\n      let sheet2Info = {};\r\n      sheet2Info.aliments_data_nutrient_ref = [];\r\n      sheet2Info.nutrient_headers = [];\r\n\r\n      jsonSpreadsheetCompo.forEach((value, index) => {\r\n          if (index === 0) {\r\n            sheet2Info.nutrient_headers = getNutrientHeaders(value);\r\n            return;\r\n          }\r\n\r\n          sheet2Info.aliments_data_nutrient_ref.push({\r\n            [value[2]] : {\r\n              alim_nom_fr: value[2],\r\n              alim_grp_nom_fr: value[0],\r\n              alim_ssgrp_nom_fr: value[1],\r\n              les_nutrients: [\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[0],\r\n                  value: value[3].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[1],\r\n                  value: value[4].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[2],\r\n                  value: value[5].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[3],\r\n                  value: value[6].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[4],\r\n                  value: value[7].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[5],\r\n                  value: value[8].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[6],\r\n                  value: value[9].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[7],\r\n                  value: value[10].toString().replace(',', '.')\r\n                },\r\n                {\r\n                  id: ++index,\r\n                  nutrient: sheet2Info.nutrient_headers[1] +\" \"+ sheet2Info.nutrient_headers[3],\r\n                  value: parseFloat(value[4].toString().replace(',', '.')) \r\n                        + parseFloat(value[6].toString().replace(',', '.'))\r\n                },\r\n              ]\r\n            }\r\n          })\r\n      });\r\n\r\n      return sheet2Info;\r\n\r\n    }\r\n\r\n    const getNutrientHeaders = (row) => {\r\n      row.push(\"Eau + Alcool (g/100g)\");\r\n      return row.slice(3);\r\n    }\r\n\r\n\r\nreturn (\r\n    <div className={classes.root}>\r\n       <Typography variant=\"h5\" gutterBottom color=\"primary\">Loading ...</Typography>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  })\r\n)","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport {\r\n    Card, \r\n    CardHeader, \r\n    CardMedia, \r\n    CardContent, \r\n    CardActions, \r\n    Avatar, \r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper\r\n  } from '@material-ui/core/';\r\n  import Autocomplete from '@material-ui/lab/Autocomplete';\r\n  \r\n  import axios from 'axios';\r\n\r\n  \r\n\r\nexport default function AlimentCard(\r\n  {\r\n    id,\r\n    aliment, \r\n    sous_groupe, \r\n    groupe_alimentaire, \r\n    portion, \r\n    spreadsheetData,\r\n    setSpreadsheetData,\r\n    nutrientCompo, \r\n    setAlimentPortion,\r\n    aliment_portion,\r\n    aliment_options\r\n  }) {\r\n\r\n    const classes = useStyles();\r\n    const [imageLoaded, setImageLoaded] = useState(false);\r\n    const [imgsrc, setImgSrc] = useState(\"\");\r\n    const [txtPortion, setTxtPortion] = useState(portion);\r\n    const [aliment_compo_group_alimentaire, set_aliment_compo_groupe_alimentaire] = useState(\"\");\r\n    \r\n\r\n    const handleAlimentChange = (value) => {\r\n        \r\n        let groupe_alim = nutrientCompo.aliments_data_nutrient_ref\r\n                          [nutrientCompo.aliments_data_nutrient_ref.findIndex\r\n                            (\r\n                              (element) => value === Object.keys(element)[0]\r\n                            )][value].alim_grp_nom_fr;\r\n        \r\n        let sous_groupe_alim = nutrientCompo.aliments_data_nutrient_ref \r\n        [nutrientCompo.aliments_data_nutrient_ref.findIndex\r\n          (\r\n            (element) => value === Object.keys(element)[0]\r\n          )][value].alim_ssgrp_nom_fr;\r\n\r\n        spreadsheetData.aliments.splice(id, 1, {\r\n            aliment: value,\r\n            sous_groupe_alimentaire: sous_groupe_alim,\r\n            groupe_alimentaire: groupe_alim,\r\n            portion: txtPortion\r\n        });\r\n\r\n        setImageLoaded(false);\r\n        setSpreadsheetData({...spreadsheetData, aliments: spreadsheetData.aliments});\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n      let groupe_alim = nutrientCompo.aliments_data_nutrient_ref\r\n                          [nutrientCompo.aliments_data_nutrient_ref.findIndex\r\n                            (\r\n                              (element) => aliment === Object.keys(element)[0]\r\n                            )][aliment].alim_grp_nom_fr;\r\n\r\n      set_aliment_compo_groupe_alimentaire(groupe_alim);        \r\n        \r\n        axios({\r\n            method: 'get',\r\n            url: `https://api.allorigins.win/get?url=${encodeURIComponent('https://yandex.com/images/search?text='+aliment+'&isize=medium')}`,\r\n        })\r\n        .then((response) => {\r\n            \r\n            let imgSearch = response.data.contents;\r\n\r\n            let skip = imgSearch.indexOf(\"\\\"freshness\\\":\\\"normal\\\",\\\"preview\\\"\");\r\n\r\n            let startPos = imgSearch.indexOf(\"https\", skip);\r\n            let endPos = imgSearch.indexOf(\"fileSizeInBytes\", startPos);\r\n            \r\n            let finalString = imgSearch.substring(startPos, (endPos-3));\r\n\r\n            setImgSrc(finalString);\r\n            setImageLoaded(true);\r\n        })\r\n        .catch((e) => { console.warn(e)});\r\n\r\n      \r\n    }, [aliment, aliment_options]);\r\n\r\n    //https://www.google.com/search?tbm=isch&source=hp&biw=1015&bih=763&q=Soupe aux légumes variés, préemballée à réchauffer\r\n\r\n    //https://yandex.com/images/search?text=Avocat%2C%20pulpe%2C%20cru&isize=medium\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                  {aliment != null ? aliment[0]: \"\"}\r\n                </Avatar>\r\n              }\r\n              title={<Typography variant=\"h5\" color=\"primary\" component=\"p\">{aliment}</Typography>}\r\n              subheader={`Sous-Groupe Alimentaire ${sous_groupe}`}\r\n            />\r\n            {imageLoaded ? (\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={imgsrc}\r\n              title={aliment}\r\n            />) \r\n            : \r\n            <CircularProgress />\r\n             \r\n            }\r\n            <CardContent>\r\n                <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\r\n                Groupe Alimentaire: {groupe_alimentaire}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                \r\n            </CardActions>\r\n            \r\n            <CardContent>\r\n                <Typography paragraph>Les Aliments</Typography>\r\n                <TextField\r\n                  required\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  type=\"number\"\r\n                  min={0}\r\n                  id={aliment}\r\n                  label=\"PORTION\"\r\n                  variant=\"filled\"\r\n                  value={txtPortion}\r\n                  onChange={(e) => {\r\n                    if (e.target.value !== \"\"){\r\n                      setTxtPortion(Number.parseFloat(e.target.value));\r\n                      setAlimentPortion({...aliment_portion, [aliment]:Number.parseFloat(e.target.value)})\r\n                      if (Number.parseFloat(e.target.value) < 0){\r\n                        setTxtPortion(0);\r\n                      }  \r\n                    }else{\r\n                      setTxtPortion(e.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n\r\n                <Autocomplete\r\n                  onChange={ (event, value) => handleAlimentChange(value) }\r\n                  options={aliment_options[aliment_compo_group_alimentaire] || []}\r\n                  getOptionLabel={(option) => option}\r\n                  renderInput={(params) => <TextField {...params} label=\"Change Aliment\" margin=\"normal\" />}\r\n                />\r\n\r\n                <TableContainer component={Paper} style={{display:'none'}}>\r\n                  <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell><strong>Le Nutriment</strong></TableCell>\r\n                        <TableCell align=\"right\"><strong>Value</strong></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {\r\n                        nutrientCompo.aliments_data_nutrient_ref\r\n                          [nutrientCompo.aliments_data_nutrient_ref.findIndex\r\n                            (\r\n                              (element) => aliment === Object.keys(element)[0]\r\n                            )][aliment].les_nutrients.map((item) => \r\n                              (\r\n                          <TableRow key={item.id}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {item.nutrient}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"right\">\r\n                                {(Number.parseFloat(item.value)  * Number.parseFloat(txtPortion)).toFixed(2)}\r\n                              </TableCell>\r\n                          </TableRow>\r\n                          )\r\n                        )\r\n                      }\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                \r\n            </CardContent>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    card: {\r\n      width: window.innerWidth - 30,\r\n      margin: 1,\r\n      marginTop: 10,\r\n      marginBottom: 50,\r\n      //background: \"linear-gradient(#654ea3, #eaafc8)\"\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: blue[500],\r\n    },\r\n    table: {\r\n      width : 250\r\n    }\r\n  }));","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Chip, Icon, Typography, Slider, withStyles } from '@material-ui/core';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\n\r\n\r\n\r\n\r\nexport default function SummariesAliment({aliment_portion, nutrientCompo}){\r\n    const PrettoSlider = withStyles(theme => ({\r\n        root: {\r\n          height: 8,\r\n        },\r\n        disabled: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: '#fff',\r\n          border: '2px solid currentColor',\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: 'calc(-50% + 4px)',\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      }))(Slider);\r\n    const classes = useStyles();\r\n    const EAU = \"Eau (g/100g)\";\r\n    const ALCOOL = \"Alcool (g/100g)\";\r\n    const GLUCIDES = \"Glucides (g/100g)\";\r\n\r\n    const styleList = [\r\n        {\r\n            icon: \"done\",\r\n            backgroundColor: \"#70AB1A\",\r\n            textColor: 'white'\r\n        }, {    \r\n            icon: \"error_outline\",\r\n            backgroundColor:\"#D8AD26\", \r\n            textColor: 'white'\r\n        },\r\n        {\r\n            icon:\"close\",\r\n            backgroundColor: \"#D14600\",\r\n            textColor: 'white'\r\n        },\r\n        {\r\n            icon: \"\",\r\n            backgroundColor: \"#ffffff\",\r\n            textColor: 'black'\r\n        }];\r\n\r\n    const progressClassNames = [{\r\n        color: '#72DC00',\r\n    },{\r\n        color: \"#D29D23\"\r\n    },{\r\n        color: \"#A93226\"\r\n    }]\r\n\r\n    const nutrientConstraints = [\r\n        {\r\n            mid: 2250,\r\n            high: 3000\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 0\r\n        },\r\n        {\r\n            mid: 69,\r\n            high: 92\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 0\r\n        },\r\n        {\r\n            mid: 600,\r\n            high: 800\r\n        },\r\n        {\r\n            mid: 1875,\r\n            high: 2500\r\n        },\r\n        {\r\n            mid: 1500,\r\n            high: 2000\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 0\r\n        },\r\n        {\r\n            mid: 0,\r\n            high: 1200\r\n        }\r\n\r\n    ]\r\n    \r\n    return (<div className={classes.root}>\r\n       {\r\n           nutrientCompo.nutrient_headers.map((item, index) => {\r\n               let myStyleIndex = 0, progressBarColorIndex = 0;\r\n               if (!item) return;\r\n                const nutrientSum = Object.keys(aliment_portion).reduce((previousValue, currentValue) =>{\r\n                    const nutrientValue = nutrientCompo.aliments_data_nutrient_ref\r\n                        [\r\n                            nutrientCompo.aliments_data_nutrient_ref.findIndex\r\n                            (\r\n                            (element) => currentValue === Object.keys(element)[0]\r\n                            )\r\n                        ][currentValue].les_nutrients[index].value\r\n                    let prdt = aliment_portion[currentValue] * Number.parseFloat(nutrientValue);\r\n                    \r\n                    return previousValue + prdt;\r\n                }, 0);\r\n\r\n                myStyleIndex = (nutrientSum >= nutrientConstraints[index].high) ? 2 : \r\n                                        (nutrientSum > nutrientConstraints[index].mid) ? 1 : 0;\r\n\r\n                if (nutrientConstraints[index].high === 0) myStyleIndex = 3;\r\n\r\n                let nutrientPercent = ((nutrientSum/nutrientConstraints[index].high) * 100).toFixed(0);\r\n                \r\n                progressBarColorIndex = (nutrientPercent >= 75) ? 2 :\r\n                                            (nutrientPercent >= 50) ? 1 : 0;\r\n\r\n                \r\n                return (\r\n                    <div key={index} style={{marginBottom: 20, width:\"95%\", paddingTop: 10}}>\r\n                    {(EAU != item) && (ALCOOL != item) && (GLUCIDES != item)  ?\r\n                (\r\n                <div>\r\n                    <PrettoSlider \r\n                        valueLabelFormat={x => x+\"%\"}\r\n                        aria-label=\"pretto slider\" \r\n                        value={nutrientPercent} \r\n                        valueLabelDisplay=\"on\"\r\n                        step={1}\r\n                        style={{color:progressClassNames[progressBarColorIndex].color}}\r\n                        />\r\n                    <Typography gutterBottom>{item}: <b>{nutrientSum.toFixed(2)} </b></Typography>\r\n                </div>\r\n                ) :\r\n                (\r\n                    <Chip \r\n                        key={index}\r\n                        style={{margin: \"0.5%\", backgroundColor: styleList[myStyleIndex].backgroundColor, color: styleList[myStyleIndex].textColor}}\r\n                        icon={<RestaurantIcon style={{color:styleList[myStyleIndex].textColor}} />} \r\n                        variant=\"outlined\"\r\n                        label={<Typography className={classes.nutrientText}>\r\n                            {item}: <b>{nutrientSum.toFixed(2)} </b></Typography>}\r\n                        onDelete={(e) => {}}\r\n                        deleteIcon={<Icon >{styleList[myStyleIndex].icon}</Icon>}\r\n                    />\r\n                    )}\r\n            </div>)\r\n           })\r\n        }\r\n        </div>\r\n        );\r\n} \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.5),\r\n        margin: 5,\r\n    },\r\n    \r\n    title: {\r\n      fontSize: 24,\r\n      justifyContent: 'center'\r\n    },\r\n    nutrientText: {\r\n        fontSize: 12,\r\n    },\r\n    chipColor: {\r\n        borderColor: 'green'\r\n    }\r\n    \r\n  })\r\n  );","import React, {useEffect, useState} from 'react';\r\nimport '../../App.css';\r\nimport '../../Nutrition.css';\r\nimport {Container, Box} from '@material-ui/core/';\r\nimport HeaderBox from '../../Components/Header/headerBox';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport JsUploadSpreadsheet from '../../Components/JS_Uploadspreadsheet';\r\nimport {\r\n  Paper, \r\n  Card,CardContent,Typography, LinearProgress\r\n} from '@material-ui/core/';\r\nimport AlimentCard from '../../Components/Aliments/AlimentCard';\r\nimport SummariesAliment from '../../Components/Aliments/SummariesAliment';\r\nimport Carousel from 'react-elastic-carousel'\r\n\r\n\r\nexport default function Home() {\r\nconst [uploaded, setUploadState] = useState(false);\r\nconst [file_name, setFileName] = useState(\"No File Uploaded\")\r\nconst [aliment_portion, setAlimentPortion] = useState({});\r\nconst [spreadsheetData, setSpreadsheetData] = useState({});\r\nconst [spreadsheetCompo, setSpreadsheetCompo] = useState({});\r\nconst [loading, setLoading] = useState(false);\r\nconst [aliment_options, setAlimentOptions] = useState([]);\r\n\r\nconst classes = useStyles();\r\n\r\n  useEffect(() => {\r\n      \r\n      if (typeof spreadsheetData.aliments == 'undefined') return;\r\n\r\n      let myAlimentObj = {};\r\n      spreadsheetData.aliments.forEach((item) => {\r\n          myAlimentObj[item.aliment] = item.portion;\r\n      });\r\n      \r\n      setAlimentPortion(\r\n        myAlimentObj\r\n      );\r\n\r\n\r\n  }, [spreadsheetData, aliment_options]);\r\n\r\n  return (\r\n    <Container >\r\n        <HeaderBox file_name={file_name}/>\r\n        \r\n        {\r\n        !uploaded &&\r\n        \r\n        <>\r\n          <JsUploadSpreadsheet \r\n              stateMutator={setUploadState} \r\n              spreadSheetMutator={setSpreadsheetData} \r\n              spreadSheetCompoMutator={setSpreadsheetCompo} \r\n              setAlimentPortionMutator={setAlimentPortion}\r\n              setLoadingMutator={setLoading}\r\n              setFileName={setFileName}\r\n              setAlimentOptions={setAlimentOptions}\r\n          />\r\n        </>\r\n\r\n        }\r\n        \r\n        {\r\n          loading && \r\n          <LinearProgress style={{marginTop: 10}}/>\r\n        }\r\n\r\n        {\r\n          uploaded &&\r\n            <Paper elevation={3} className={classes.root}>\r\n              <Card className={classes.summary_root}>\r\n                <CardContent>\r\n                  <Typography className={classes.title} >\r\n                    Summaries\r\n                  </Typography>\r\n\r\n                  <SummariesAliment \r\n                      aliment_portion={aliment_portion}\r\n                      nutrientCompo={spreadsheetCompo}\r\n                  />\r\n\r\n                </CardContent>        \r\n              </Card>\r\n\r\n              <Carousel itemsToShow={1}>\r\n              {\r\n              spreadsheetData.aliments.map((item, index) => \r\n                    <AlimentCard\r\n                          id={index}  \r\n                          key={index}\r\n                          aliment={(item != null) ? item.aliment : \"\"} \r\n                          sous_groupe={(item != null) ? item.sous_groupe_alimentaire : \"\"}\r\n                          groupe_alimentaire={(item != null) ? item.groupe_alimentaire : \"\"}\r\n                          portion={(item != null) ? item.portion : \"\"} \r\n                          spreadsheetData={spreadsheetData}\r\n                          setSpreadsheetData={setSpreadsheetData} \r\n                          nutrientCompo={spreadsheetCompo}\r\n                          setAlimentPortion={setAlimentPortion}\r\n                          aliment_portion={aliment_portion}\r\n                          aliment_options={aliment_options}  \r\n                    />\r\n                )\r\n              }\r\n             </Carousel>\r\n            <Box component=\"span\" m={1}>\r\n              \r\n            </Box>\r\n          </Paper>\r\n        }\r\n    \r\n    </Container>\r\n  );\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      background: 'linear-gradient(45deg, rgba(255,255,255,0.9) 30%, #rgba(225,225,255,0.4) 90%)',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgba(10, 10, 0, .1)',\r\n      color: 'white',\r\n    },\r\n    food_card:{\r\n      flexGrow: 1\r\n    },\r\n    summary_root: {\r\n      width: \"100%\",\r\n      flex: 1\r\n    },\r\n    myCardRow:{\r\n      flexDirection: 'row'\r\n    },\r\n    myCardColumn: {\r\n      flexDirection: 'column'\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n      justifyContent: 'center'\r\n    },\r\n  }\r\n);\r\n","import React from 'react';\r\n\r\nimport Home from './Pages/Home/home';\r\n\r\nfunction Main() {\r\n  return (\r\n    <Home />\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './App.css';\r\nimport Main from './Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}